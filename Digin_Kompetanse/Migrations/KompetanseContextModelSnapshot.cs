// <auto-generated />
using Digin_Kompetanse.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Digin_Kompetanse.Migrations
{
    [DbContext(typeof(KompetanseContext))]
    partial class KompetanseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Digin_Kompetanse.Models.Bedrift", b =>
                {
                    b.Property<int>("BedriftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bedrift_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BedriftId"));

                    b.Property<string>("BedriftEpost")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("bedrift_epost");

                    b.Property<string>("BedriftNavn")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("bedrift_navn");

                    b.Property<string>("Beskrivelse")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("beskrivelse");

                    b.HasKey("BedriftId")
                        .HasName("bedrift_pkey");

                    b.ToTable("bedrift", (string)null);
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.Fagområde", b =>
                {
                    b.Property<int>("FagområdeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fagområde_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FagområdeId"));

                    b.Property<int?>("BedriftId")
                        .HasColumnType("integer")
                        .HasColumnName("bedrift_id");

                    b.Property<string>("FagområdeNavn")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("fagområde_navn");

                    b.HasKey("FagområdeId")
                        .HasName("Fagområde_pkey");

                    b.HasIndex("BedriftId");

                    b.ToTable("Fagområde", (string)null);
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.Kompetanse", b =>
                {
                    b.Property<int>("KompetanseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("kompetanse_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KompetanseId"));

                    b.Property<string>("KompetanseKategori")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("kompetanse_kategori");

                    b.HasKey("KompetanseId")
                        .HasName("kompetanse_pkey");

                    b.ToTable("kompetanse", (string)null);
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.UnderKompetanse", b =>
                {
                    b.Property<int>("UnderkompetanseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("underkompetanse_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UnderkompetanseId"));

                    b.Property<int?>("KompetanseId")
                        .HasColumnType("integer")
                        .HasColumnName("kompetanse_id");

                    b.Property<string>("UnderkompetanseNavn")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("underkompetanse_navn");

                    b.HasKey("UnderkompetanseId")
                        .HasName("under_kompetanse_pkey");

                    b.HasIndex("KompetanseId");

                    b.ToTable("under_kompetanse", (string)null);
                });

            modelBuilder.Entity("FagområdeHasKompetanse", b =>
                {
                    b.Property<int>("FagområdeId")
                        .HasColumnType("integer")
                        .HasColumnName("fagområde_id");

                    b.Property<int>("KompetanseId")
                        .HasColumnType("integer")
                        .HasColumnName("kompetanse_id");

                    b.HasKey("FagområdeId", "KompetanseId")
                        .HasName("fagområde_has_kompetanse_pkey");

                    b.HasIndex("KompetanseId");

                    b.ToTable("fagområde_has_kompetanse", (string)null);
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.Fagområde", b =>
                {
                    b.HasOne("Digin_Kompetanse.Models.Bedrift", "Bedrift")
                        .WithMany("Fagområdes")
                        .HasForeignKey("BedriftId")
                        .HasConstraintName("fk_bedrift");

                    b.Navigation("Bedrift");
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.UnderKompetanse", b =>
                {
                    b.HasOne("Digin_Kompetanse.Models.Kompetanse", "Kompetanse")
                        .WithMany("UnderKompetanses")
                        .HasForeignKey("KompetanseId")
                        .HasConstraintName("under_kompetanse_kompetanse_id_fkey");

                    b.Navigation("Kompetanse");
                });

            modelBuilder.Entity("FagområdeHasKompetanse", b =>
                {
                    b.HasOne("Digin_Kompetanse.Models.Fagområde", null)
                        .WithMany()
                        .HasForeignKey("FagområdeId")
                        .IsRequired()
                        .HasConstraintName("fagområde_has_kompetanse_fagområde_id_fkey");

                    b.HasOne("Digin_Kompetanse.Models.Kompetanse", null)
                        .WithMany()
                        .HasForeignKey("KompetanseId")
                        .IsRequired()
                        .HasConstraintName("fagområde_has_kompetanse_kompetanse_id_fkey");
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.Bedrift", b =>
                {
                    b.Navigation("Fagområdes");
                });

            modelBuilder.Entity("Digin_Kompetanse.Models.Kompetanse", b =>
                {
                    b.Navigation("UnderKompetanses");
                });
#pragma warning restore 612, 618
        }
    }
}
